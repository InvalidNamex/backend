# Generated by Django 4.1.1 on 2022-09-16 20:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('customerEmail', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Brands',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brandName', models.CharField(max_length=255)),
                ('brandImage', models.ImageField(blank=True, upload_to='brands')),
            ],
            options={
                'ordering': ['brandName'],
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cartCreatedAt', models.DateTimeField(auto_now_add=True)),
                ('cartCustomer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Collections',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collectionName', models.CharField(max_length=255)),
                ('collectionImage', models.ImageField(blank=True, upload_to='collections')),
            ],
            options={
                'ordering': ['collectionName'],
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productName', models.CharField(max_length=255)),
                ('productPrice', models.DecimalField(decimal_places=2, max_digits=8)),
                ('productSlug', models.SlugField()),
                ('productAvailability', models.BooleanField(default=False)),
                ('productDescription', models.TextField(blank=True, null=True)),
                ('productSKU', models.CharField(blank=True, max_length=255, null=True)),
                ('productModel', models.CharField(blank=True, max_length=255, null=True)),
                ('productLastUpdate', models.DateTimeField(auto_now=True)),
                ('productRating', models.SmallIntegerField()),
                ('productBrand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='products', to='store.brands')),
                ('productCollection', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='store.collections')),
            ],
            options={
                'ordering': ['productName'],
            },
        ),
        migrations.CreateModel(
            name='Promotions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promotionName', models.CharField(max_length=255)),
                ('promotionDescription', models.TextField(blank=True)),
                ('promotionDiscount', models.PositiveSmallIntegerField()),
                ('promotionIsPercentage', models.BooleanField(default=False)),
                ('promotionIsActive', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CaseFeatures',
            fields=[
                ('product', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='caseFeatures', serialize=False, to='store.products')),
                ('featureWatt', models.CharField(blank=True, max_length=10, null=True)),
                ('featureCaseFans', models.CharField(blank=True, max_length=10, null=True)),
                ('bundled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CoolingFeatures',
            fields=[
                ('product', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='coolingFeatures', serialize=False, to='store.products')),
                ('featurePcCooling', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GraphicsCardFeatures',
            fields=[
                ('product', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='graphicsCardFeatures', serialize=False, to='store.products')),
                ('featureChipset', models.CharField(blank=True, max_length=20, null=True)),
                ('featureGpuMemory', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MonitorFeatures',
            fields=[
                ('product', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='monitorFeatures', serialize=False, to='store.products')),
                ('featureDisplayRes', models.CharField(blank=True, max_length=12, null=True)),
                ('featureScreenSize', models.CharField(blank=True, max_length=5, null=True)),
                ('featurePanelType', models.CharField(blank=True, max_length=5, null=True)),
                ('featureResponseTime', models.CharField(blank=True, max_length=5, null=True)),
                ('featureRefreshRate', models.CharField(blank=True, max_length=5, null=True)),
                ('featureFlatCurved', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MotherBoardFeatures',
            fields=[
                ('product', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='motherBoardFeatures', serialize=False, to='store.products')),
                ('featureSocket', models.CharField(blank=True, max_length=20, null=True)),
                ('featureSeries', models.CharField(blank=True, max_length=50, null=True)),
                ('featureGeneration', models.CharField(blank=True, max_length=50, null=True)),
                ('featureCores', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotebookFeatures',
            fields=[
                ('product', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='notebook', serialize=False, to='store.products')),
                ('notebookDisplay', models.CharField(blank=True, max_length=20, null=True)),
                ('notebookGraphicsCard', models.CharField(blank=True, max_length=20, null=True)),
                ('notebookRam', models.CharField(blank=True, max_length=20, null=True)),
                ('notebookPanel', models.CharField(blank=True, max_length=20, null=True)),
                ('notebookProcessor', models.CharField(blank=True, max_length=20, null=True)),
                ('notebookRefreshRate', models.CharField(blank=True, max_length=20, null=True)),
                ('notebookStorage', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PowerSupplyFeatures',
            fields=[
                ('product', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='powerSupplyFeatures', serialize=False, to='store.products')),
                ('featureWatt', models.CharField(blank=True, max_length=10, null=True)),
                ('featureRating', models.CharField(blank=True, max_length=10, null=True)),
                ('featureModular', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessorFeatures',
            fields=[
                ('product', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='processorFeatures', serialize=False, to='store.products')),
                ('featureSocket', models.CharField(blank=True, max_length=20, null=True)),
                ('featureSeries', models.CharField(blank=True, max_length=50, null=True)),
                ('featureGeneration', models.CharField(blank=True, max_length=50, null=True)),
                ('featureCores', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RamFeatures',
            fields=[
                ('product', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='ramFeatures', serialize=False, to='store.products')),
                ('featureCapacity', models.CharField(blank=True, max_length=6, null=True)),
                ('featureMemoryType', models.CharField(blank=True, max_length=7, null=True)),
                ('featureSpeed', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StorageFeatures',
            fields=[
                ('product', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='storage', serialize=False, to='store.products')),
                ('featureCapacity', models.CharField(blank=True, max_length=6, null=True)),
                ('featureFormfactor', models.CharField(blank=True, max_length=10, null=True)),
                ('featureInterface', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wishListLikedDate', models.DateTimeField(auto_now=True)),
                ('wishListCustomer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('wishListProducts', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.products')),
            ],
            options={
                'ordering': ['wishListProducts'],
            },
        ),
        migrations.CreateModel(
            name='SubCollections',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subCollectionName', models.CharField(max_length=255)),
                ('subcollectionImage', models.ImageField(blank=True, upload_to='subCollections')),
                ('subCollectionMainCollection', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.collections')),
            ],
            options={
                'ordering': ['subCollectionName'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchaseItemQuantity', models.PositiveSmallIntegerField()),
                ('purchaseItemUnitPrice', models.DecimalField(decimal_places=2, max_digits=8)),
                ('purchaseItemCart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.cart')),
                ('purchaseItemProduct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.products')),
            ],
            options={
                'ordering': ['purchaseItemCart'],
            },
        ),
        migrations.AddField(
            model_name='products',
            name='productSubCollection',
            field=smart_selects.db_fields.ChainedForeignKey(chained_field='productCollection', chained_model_field='subCollectionMainCollection', on_delete=django.db.models.deletion.CASCADE, to='store.subcollections'),
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imageOne', models.ImageField(blank=True, upload_to='products')),
                ('imageTwo', models.ImageField(blank=True, upload_to='products')),
                ('imageThree', models.ImageField(blank=True, upload_to='products')),
                ('imageFour', models.ImageField(blank=True, upload_to='products')),
                ('imageFive', models.ImageField(blank=True, upload_to='products')),
                ('imageSix', models.ImageField(blank=True, upload_to='products')),
                ('imageSeven', models.ImageField(blank=True, upload_to='products')),
                ('imageEight', models.ImageField(blank=True, upload_to='products')),
                ('imageNine', models.ImageField(blank=True, upload_to='products')),
                ('imageTen', models.ImageField(blank=True, upload_to='products')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.products')),
            ],
            options={
                'ordering': ['product'],
            },
        ),
        migrations.CreateModel(
            name='FeaturedProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('featuredProductCreatedAt', models.DateTimeField(auto_now_add=True)),
                ('featuredProduct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.products')),
            ],
        ),
        migrations.CreateModel(
            name='Banners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bannerImage', models.ImageField(blank=True, upload_to='banners')),
                ('bannerProduct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.products')),
            ],
            options={
                'ordering': ['bannerProduct'],
            },
        ),
        migrations.CreateModel(
            name='Addresses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addressTitle', models.CharField(max_length=255)),
                ('addressLineOne', models.CharField(max_length=255)),
                ('addressLineTwo', models.CharField(blank=True, max_length=255)),
                ('addressDescription', models.CharField(blank=True, max_length=255)),
                ('addressCustomer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
